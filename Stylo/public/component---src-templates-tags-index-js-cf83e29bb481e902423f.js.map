{"version":3,"file":"component---src-templates-tags-index-js-cf83e29bb481e902423f.js","mappings":"2PA6CA,MArCuB,IAAgB,IAAf,MAAEA,GAAO,EAC/B,OAAKA,GACAC,MAAMC,QAAQF,GAGjB,gBAAC,IAAS,KACR,sBAAIG,UCbe,+CDchBH,EAAMI,KAAKC,IAAU,IAAD,MACnB,OACE,sBAAIC,IAAKD,EAAKE,MACZ,gBAAC,KAAI,CAACC,GAAE,SAAWH,EAAKE,KAAQJ,UChB5B,uCDiBF,gBAAC,EAAAM,EAAW,CAACC,IAAI,GAAGC,MAAqB,QAAhB,EAAEN,EAAKO,iBAAS,aAAd,EAAgBC,cAC3C,sBAAIV,UChBD,wCDgB2BE,EAAKS,QAErC,4BACmB,QAAhB,EAAAT,EAAKU,mBAAW,aAAhB,EAAkBC,OAAOC,EAAAA,EAAAA,GAAeZ,EAAKU,cAEhD,uBAAKZ,UCtBD,uCDuBF,6BAAQE,EAAKa,aACb,yBAAOf,UAAWgB,EAAAA,IACF,QADiB,EAC9Bd,EAAKe,gBAAQ,aAAb,EAAeC,KAAKjB,KAAIkB,GAErB,uBAAKhB,IAAKgB,EAAIC,cAAepB,UAAWgB,EAAAA,IACrCG,EAAIE,UAMZ,MA5BI,IAgCL,C,2LEhChB,IAEMC,EAAQ,8DA6BZ,OA7BY,wBACbC,OAAA,WACC,MAAM1B,EAAQ2B,IAAIC,KAAM,0CAClBP,EAAOM,IAAIC,KAAM,qCACjBC,EAAUF,IAAIC,KAAM,qBAE1B,OACA,gBAAC,IAAM,CAACE,SAAUF,KAAKG,MAAMD,UAC5B,uBAAK3B,UAAW6B,EAAAA,IACf,uBAAK7B,UAAW6B,EAAAA,IACf,sBAAI7B,UAAW6B,EAAAA,IAAc,UAAQH,EAAQL,QAG/C,gBAAC,IAAc,CAACxB,MAAOA,IACvB,gBAAC,IAAS,KACT,sBAAIiC,MAAM,cAAa,aACvB,yBAAO9B,UAAWgB,EAAAA,IACjBE,EAAKjB,KAAIkB,GACT,uBAAKhB,IAAKgB,EAAKnB,UAAWgB,EAAAA,IACzB,gBAAC,KAAI,CAACX,GAAE,SAAWc,EAAIC,cAAiBW,gBAAgB,UAAUZ,EAAIE,SAErE,IACF,uBAAKlB,IAAI,MAAMH,UAAWgB,EAAAA,IACzB,gBAAC,KAAI,CAACX,GAAG,UAAS,eAMvB,EAAC,EA7BY,CAAS2B,EAAAA,WA+BvB,YAEO,MAAMC,EAAQ,IAAsB,IAArB,YAAEC,GAAa,EACpC,MAAMC,EAAQ,QAAUD,EAAYb,KACnC,OACE,gBAAC,IAAG,CACFV,MAAOwB,GACP,C","sources":["webpack://contentful-starter-gatsby-blog/./src/components/article-preview.js","webpack://contentful-starter-gatsby-blog/./src/styles/article-preview.module.scss","webpack://contentful-starter-gatsby-blog/./src/templates/tags-index.js"],"sourcesContent":["import React from 'react'\nimport { Link } from 'gatsby'\nimport { GatsbyImage } from 'gatsby-plugin-image'\nimport { renderRichText } from 'gatsby-source-contentful/rich-text'\nimport Container from './container'\nimport * as styles from '../styles/article-preview.module.scss'\nimport * as tagstyles from '../styles/tags.module.scss'\n\nconst ArticlePreview = ({ posts }) => {\n  if (!posts) return null\n  if (!Array.isArray(posts)) return null\n\n  return (\n    <Container>\n      <ul className={styles.articleList}>\n        {posts.map((post) => {\n          return (\n            <li key={post.slug}>\n              <Link to={`/blog/${post.slug}`} className={styles.link}>\n                <GatsbyImage alt=\"\" image={post.heroImage?.gatsbyImage} />\n                <h2 className={styles.title}>{post.title}</h2>\n              </Link>\n              <div>\n                {post.description?.raw && renderRichText(post.description)}\n              </div>\n              <div className={styles.meta}>\n                <small>{post.publishDate}</small>\n                <small className={tagstyles.tags}>\n                  {post.metadata?.tags.map(tag => {\n                    return (\n                      <div key={tag.contentful_id} className={tagstyles.tag}>\n                        {tag.name}\n                      </div>\n                    )\n                  })}\n                </small>\n              </div>\n            </li>\n          )\n        })}\n      </ul>\n    </Container>\n  )\n}\n\nexport default ArticlePreview\n","// extracted by mini-css-extract-plugin\nexport var articleList = \"article-preview-module--article-list--f3477\";\nexport var link = \"article-preview-module--link--2fce0\";\nexport var meta = \"article-preview-module--meta--4fcbb\";\nexport var title = \"article-preview-module--title--b0ff9\";","import React from 'react'\nimport get from 'lodash/get'\nimport { Link, graphql } from 'gatsby'\nimport Seo from '../components/seo'\nimport Layout from '../components/layout'\nimport Container from '../components/container'\nimport ArticlePreview from '../components/article-preview'\nimport * as styles from '../styles/hero.module.scss'\nimport * as tagstyles from '../styles/tags.module.scss'\n// import { StaticImage } from 'gatsby-plugin-image'\n\nclass TagIndex extends React.Component {\n\trender() {\n\t\tconst posts = get(this, 'props.data.allContentfulBlogPost.nodes')\n\t\tconst tags = get(this, 'props.data.allContentfulTag.nodes')\n\t\tconst tagname = get(this, 'props.pageContext')\n\t\t\n\t\treturn (\n\t\t<Layout location={this.props.location}>\n\t\t\t<div className={styles.hero}>\n\t\t\t\t<div className={styles.details}>\n\t\t\t\t\t<h1 className={styles.title}>TAGS : {tagname.name}</h1>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<ArticlePreview posts={posts} />\n\t\t\t<Container>\n\t\t\t\t<h2 class=\"hero-title\">TAG Cloud</h2>\n\t\t\t\t<small className={tagstyles.center}>\n\t\t\t\t{tags.map(tag => (\n\t\t\t\t\t<div key={tag} className={tagstyles.tag}>\n\t\t\t\t\t\t<Link to={`/tags/${tag.contentful_id}`} activeClassName=\"active\">{tag.name}</Link>\n\t\t\t\t\t</div>\n\t\t\t\t))}_\n\t\t\t\t\t<div key=\"tag\" className={tagstyles.tag}>\n\t\t\t\t\t\t<Link to=\"/tags/\">ALL Tags</Link>\n\t\t\t\t\t</div>\n\t\t\t\t</small>\n\t\t\t</Container>\n\t\t</Layout>\n\t\t)\n\t}\n}\nexport default TagIndex\n\nexport const Head =  ({ pageContext }) => {\n\tconst names = 'Tags:' + pageContext.name;\n  return (\n    <Seo\n      title={names}\n    />\n  )\n}\n\nexport const pageQuery = graphql`\nquery TagIndexQuery ($slug: String!){\n\tallContentfulTag {\n\t\tnodes {\n\t\t\tcontentful_id\n\t\t\tname\n\t\t}\n\t}\n\tallContentfulBlogPost(\n\t\tsort: { publishDate: DESC }\n\t\tfilter: {metadata: {tags: {elemMatch: {contentful_id: {eq: $slug }}}}}\n\t){\n\t\tnodes {\n\t\t\ttitle\n\t\t\tslug\n\t\t\tpublishDate(formatString: \"YYYY/MM/DD\")\n\t\t\tmetadata {\n\t\t\t\ttags {\n\t\t\t\t\tcontentful_id\n\t\t\t\t\tname\n\t\t\t\t}\n\t\t\t}\n\t\t\theroImage {\n\t\t\t\tgatsbyImage(\n\t\t\t\t\tlayout: FULL_WIDTH\n\t\t\t\t\tplaceholder: BLURRED\n\t\t\t\t\twidth: 424\n\t\t\t\t\theight: 212\n\t\t\t\t)\n\t\t\t}\n\t\t\tdescription {\n\t\t\traw\n\t\t\t}\n\t\t}\n\t}\n}\n`"],"names":["posts","Array","isArray","className","map","post","key","slug","to","G","alt","image","heroImage","gatsbyImage","title","description","raw","renderRichText","publishDate","tagstyles","metadata","tags","tag","contentful_id","name","TagIndex","render","get","this","tagname","location","props","styles","class","activeClassName","React","Head","pageContext","names"],"sourceRoot":""}