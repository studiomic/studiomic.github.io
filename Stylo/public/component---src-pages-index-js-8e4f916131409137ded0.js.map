{"version":3,"file":"component---src-pages-index-js-8e4f916131409137ded0.js","mappings":"2PA6CA,MArCuB,IAAgB,IAAf,MAAEA,GAAO,EAC/B,OAAKA,GACAC,MAAMC,QAAQF,GAGjB,gBAAC,IAAS,KACR,sBAAIG,UCbe,+CDchBH,EAAMI,KAAKC,IAAU,IAAD,MACnB,OACE,sBAAIC,IAAKD,EAAKE,MACZ,gBAAC,KAAI,CAACC,GAAE,SAAWH,EAAKE,KAAQJ,UChB5B,uCDiBF,gBAAC,EAAAM,EAAW,CAACC,IAAI,GAAGC,MAAqB,QAAhB,EAAEN,EAAKO,iBAAS,aAAd,EAAgBC,cAC3C,sBAAIV,UChBD,wCDgB2BE,EAAKS,QAErC,4BACmB,QAAhB,EAAAT,EAAKU,mBAAW,aAAhB,EAAkBC,OAAOC,EAAAA,EAAAA,GAAeZ,EAAKU,cAEhD,uBAAKZ,UCtBD,uCDuBF,6BAAQE,EAAKa,aACb,yBAAOf,UAAWgB,EAAAA,IACF,QADiB,EAC9Bd,EAAKe,gBAAQ,aAAb,EAAeC,KAAKjB,KAAIkB,GAErB,uBAAKhB,IAAKgB,EAAIC,cAAepB,UAAWgB,EAAAA,IACrCG,EAAIE,UAMZ,MA5BI,IAgCL,C,wLE7BhB,MATqB,IACnB,uBAAKrB,UCHa,mCDGasB,QAAQ,QACrC,+BACE,sBAAItB,UCJS,mCDIgB,kCAC7B,yBAAG,uC,sBEEyC,IAE5CuB,EAAS,8DA0CZ,OA1CY,wBACbC,OAAA,WACE,MAAM3B,EAAQ4B,IAAIC,KAAM,0CAClBC,EAAQF,IAAIC,KAAM,uCACjBE,GAAUH,IAAIC,KAAM,wCAC3B,OACE,gBAAC,IAAM,CAACG,SAAUH,KAAKI,MAAMD,UAC3B,gBAAC,EAAM,MACP,uBAAKE,MAAM,WACT,uBAAKC,MAAM,6BAA6BC,QAAQ,gBAAe,wBAAMC,EAAE,8KAEzE,2BAASlC,UCpBM,qCDqBb,2BAASA,UCtBE,mCDuBT,sBAAIA,UCpBG,iCDoBsB,SAC5B2B,EAAM1B,KAAKkC,IAAI,aAChB,uBAAKhC,IAAKgC,EAAKC,GAAIpC,UCrBd,+BDsBH,0BACE,gBAAC,KAAI,CAACK,GAAE,WAAqB,QAArB,EAAY8B,EAAKE,YAAI,aAAT,EAAWC,YAAYlC,OACxC+B,EAAKE,KAAKC,YAAY3B,QAG3B,0BACE,0BAAKwB,EAAKE,KAAKC,YAAYC,MAC3B,0BAAKJ,EAAKE,KAAKC,YAAY1B,cAEzB,MAIlB,uBAAKZ,UAAU,OACP,2BAASA,UAAWwC,EAAAA,IAClB,uBAAKxC,UAAWwC,EAAAA,IAChB,gBAAC,EAAAlC,EAAW,CAACN,UAAWwC,EAAAA,GAAYjC,IAAKqB,EAAOP,KAAMb,MAAOoB,EAAOnB,UAAUC,cAC5E,uBAAKV,UAAWwC,EAAAA,IACd,sBAAIxC,UAAWwC,EAAAA,IAAY,WAIjC,gBAAC,IAAc,CAAC3C,MAAOA,KAI7B,EAAC,EA1CY,CAAS4C,EAAAA,WA6CjB,MAAMC,EAAO,IAAe,IAAd,KAAEC,GAAM,EAC3B,OACE,gBAAC,IAAG,CACF/B,YAAa+B,EAAKC,KAAKC,aAAajC,aACpC,EAGN,O","sources":["webpack://contentful-starter-gatsby-blog/./src/components/article-preview.js","webpack://contentful-starter-gatsby-blog/./src/styles/article-preview.module.scss","webpack://contentful-starter-gatsby-blog/./src/components/intoro-top.js","webpack://contentful-starter-gatsby-blog/./src/styles/intoro-top.module.scss","webpack://contentful-starter-gatsby-blog/./src/pages/index.js","webpack://contentful-starter-gatsby-blog/./src/styles/top-note.module.scss"],"sourcesContent":["import React from 'react'\nimport { Link } from 'gatsby'\nimport { GatsbyImage } from 'gatsby-plugin-image'\nimport { renderRichText } from 'gatsby-source-contentful/rich-text'\nimport Container from './container'\nimport * as styles from '../styles/article-preview.module.scss'\nimport * as tagstyles from '../styles/tags.module.scss'\n\nconst ArticlePreview = ({ posts }) => {\n  if (!posts) return null\n  if (!Array.isArray(posts)) return null\n\n  return (\n    <Container>\n      <ul className={styles.articleList}>\n        {posts.map((post) => {\n          return (\n            <li key={post.slug}>\n              <Link to={`/blog/${post.slug}`} className={styles.link}>\n                <GatsbyImage alt=\"\" image={post.heroImage?.gatsbyImage} />\n                <h2 className={styles.title}>{post.title}</h2>\n              </Link>\n              <div>\n                {post.description?.raw && renderRichText(post.description)}\n              </div>\n              <div className={styles.meta}>\n                <small>{post.publishDate}</small>\n                <small className={tagstyles.tags}>\n                  {post.metadata?.tags.map(tag => {\n                    return (\n                      <div key={tag.contentful_id} className={tagstyles.tag}>\n                        {tag.name}\n                      </div>\n                    )\n                  })}\n                </small>\n              </div>\n            </li>\n          )\n        })}\n      </ul>\n    </Container>\n  )\n}\n\nexport default ArticlePreview\n","// extracted by mini-css-extract-plugin\nexport var articleList = \"article-preview-module--article-list--f3477\";\nexport var link = \"article-preview-module--link--2fce0\";\nexport var meta = \"article-preview-module--meta--4fcbb\";\nexport var title = \"article-preview-module--title--b0ff9\";","import React from 'react'\nimport * as styles from '../styles/intoro-top.module.scss'\n\nconst Introduction = () => (\n  <div className={styles.intoro} loading=\"lazy\">\n    <article>\n      <h1 className={styles.title}>Blog et Gatsby Pages de Cerise</h1>\n      <p>Je suis Designer et Web Developer</p>\n    </article>\n  </div>\n)\n\nexport default Introduction\n\n// {/* <p>Ce site est mon carnet et mon stylo</p> */}\n// Ce site est mon papier et mon stylo\n// Sakura's blog and pages\n// paper and pen\n// Blog et pages de Sakura\n// papier et stylo\n// couleur cerise\n// Je suis Yamato Sakura\n// couleur cerise\n// pétales de fleurs de cerisier\n// Elle est les pétales de fleurs de cerisier qui tombent souvent\n// She is the cherry blossom petals that often fall\n// She's a cherry blossom petal falling like a blizzard","// extracted by mini-css-extract-plugin\nexport var intoro = \"intoro-top-module--intoro--61624\";\nexport var title = \"intoro-top-module--title--e4cb0\";","import React from 'react'\nimport get from 'lodash/get'\nimport { graphql, Link } from 'gatsby';\nimport { GatsbyImage } from 'gatsby-plugin-image'\nimport Layout from '../components/layout'\nimport Seo from '../components/seo'\nimport Intoro from '../components/intoro-top'\nimport ArticlePreview from '../components/article-preview'\nimport * as styles from '../styles/top-note.module.scss'\nimport * as hero from '../styles/hero.module.scss'\n\nclass RootIndex extends React.Component {\n  render() {\n    const posts = get(this, 'props.data.allContentfulBlogPost.nodes')\n    const notes = get(this, 'props.data.allMarkdownRemark.edges')\n    const [author] = get(this, 'props.data.allContentfulPerson.nodes')\n    return (\n      <Layout location={this.props.location}>\n        <Intoro />\n        <div class=\"wavetop\">\n          <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1440 320\"><path d=\"M0,64L80,85.3C160,107,320,149,480,144C640,139,800,85,960,58.7C1120,32,1280,32,1360,32L1440,32L1440,0L1360,0C1280,0,1120,0,960,0C800,0,640,0,480,0C320,0,160,0,80,0L0,0Z\"/></svg>\n        </div>\n        <section className={styles.container}>\n          <article className={styles.article}>\n            <h1 className={styles.title}>Notes</h1>\n            {notes.map((edge) => (\n            <div key={edge.id} className={styles.top}>\n              <h2>\n                <Link to={`/notes/${edge.node?.frontmatter.slug}`}>\n                  {edge.node.frontmatter.title}\n                </Link>\n              </h2>\n              <dl>\n                <dt>{edge.node.frontmatter.date}</dt>\n                <dd>{edge.node.frontmatter.description}</dd>\n              </dl>\n            </div>\n          ))}\n          </article>\n        </section>\n<div className=\"mno\">\n        <section className={hero.solidimage}>\n          <div className={hero.hero}>\n          <GatsbyImage className={hero.image} alt={author.name} image={author.heroImage.gatsbyImage} />\n            <div className={hero.details}>\n              <h1 className={hero.title}>BLOG</h1>\n            </div>\n          </div>\n        </section>\n        <ArticlePreview posts={posts} />\n</div>\n      </Layout>\n    )\n  }\n}\n\nexport const Head = ({ data }) => {\n  return (\n    <Seo\n      description={data.site.siteMetadata.description}\n    />\n  )\n}\nexport default RootIndex\n\nexport const pageQuery = graphql`\n  query HomeQuery {\n    site {\n      siteMetadata {\n        title\n        description\n      }\n    }\n    allContentfulBlogPost(sort: { publishDate: DESC }) {\n      nodes {\n        title\n        slug\n        publishDate(formatString: \"YYYY/MM/DD\")\n        heroImage {\n          gatsbyImage(\n            layout: FULL_WIDTH\n            placeholder: BLURRED\n            width: 424\n            height: 212\n          )\n        }\n        description {\n          raw\n        }\n        metadata {\n          tags {\n            contentful_id\n            name\n          }\n        }\n      }\n    }\n    allMarkdownRemark(sort: {frontmatter: {date: DESC}}) {\n      edges {\n        node {\n          html\n          timeToRead\n          frontmatter {\n            title\n            date(formatString: \"YYYY/MM/DD\")\n            description\n            slug\n          }\n        }\n      }\n    }\n    allContentfulPerson(\n      filter: { contentful_id: { eq: \"15jwOBqpxqSAOy2eOO4S0m\" } }\n    ) {\n      nodes {\n        name\n        shortBio {\n          raw\n        }\n        title\n        heroImage: image {\n          gatsbyImage(layout: CONSTRAINED, placeholder: BLURRED, width: 1180)\n        }\n      }\n    }\n  }\n`\n //BLURRED//TRACED_SVG","// extracted by mini-css-extract-plugin\nexport var article = \"top-note-module--article--93512\";\nexport var container = \"top-note-module--container--ebf7a\";\nexport var solotitle = \"top-note-module--solotitle--4dff0\";\nexport var title = \"top-note-module--title--43b2e\";\nexport var top = \"top-note-module--top--b4dd3\";"],"names":["posts","Array","isArray","className","map","post","key","slug","to","G","alt","image","heroImage","gatsbyImage","title","description","raw","renderRichText","publishDate","tagstyles","metadata","tags","tag","contentful_id","name","loading","RootIndex","render","get","this","notes","author","location","props","class","xmlns","viewBox","d","edge","id","node","frontmatter","date","hero","React","Head","data","site","siteMetadata"],"sourceRoot":""}